#*******************************************
# MacDescription = Update Corrected Coordinates on Geocaching.Com
# MacFileName = CopyCorrectedToGeocachingCom.gsk
# MacAuthor = bjoff
# MacVersion= 1.04
# MacUrl = 
#*******************************************

# v1.01 - 2017-07-27 Initial commit, after a bit rewrite
# v1.02 - 2017-07-30 Bugfix: Checks for wrong custom-field at startup.
# v1.03 - 2017-08-09 Now we also sends caches that has not CorrDate (ie corrected
#                    before CorrectedDateToCustomField was installed
# v1.04 - 2017-08-11 Update a corrected coordinate is not allowed, so now we
#                    delete it first if it already exists corrected coordinates 
#                    on geocaching.com
# v1.05 - 2018-05-07 Added check that corrected coords exists after sending, as there
#                    seems to be some quirks with this API.
#                    Also added pause when API returns 'exceeded'


# Oppdaterer korrigerte koordinater på geocaching.com.
#
#
# Krav for å benytte denne makroen:
#  * Installer makro CorrectedDateToCustomField : http://gsak.net/board/index.php?showtopic=26381
#  * Legg inn makro fra steget over i 'Corrected Coordinates' dialogen under 'Macro to run after OK'
#  * Alle cacher som skal oppdateres på geocaching.com må ha en gyldig dato i feltet 'CorrDate'
#  
# Når dette er på plass vil makroen holde styr på hvilke cacher som er endret lokalt og som ikke er 
# send til geocaching.com.
# Dersom korrigerte koordinater slettes vil makroen fjerne koordinatene fra gc.com 
# 

VERCHECK Version=8.6.0.0 (Please update GSAK to version 8.6 or later to run this macro)

# Check if we have the macro "CorrectedDateToCustomField" installed and setup.
$_sql="PRAGMA table_info(Custom)"
$CustomCol=Sqlite("sql",$_sql)
If At("CorrDate",$CustomCol)=0
    MsgOk msg=Avslutter. Du må først installere og kjøre makroen CorrectedDateToCustomField
    Return
EndIf


# Some housekeeping, should only run first time we use the macro.
$_sql="PRAGMA table_info(Custom)"
$CustomCol=Sqlite("sql",$_sql)
If At("CorrUpdate",$CustomCol)=0
    $Status=CustomConfig("Add","CorrUpdate,Date,Local,,,,,")
EndIf


# Chose caches which should be updated
MFilter where=(CorrDate > '01-01-2000' and CorrDate >= CorrUpdate) or (CorrDate = '' and CorrUpdate = '' and HasCorrected)
If $_FilterCount = 0
  MsgOk msg=Avslutter. Ingen cacher trenger oppdatering
  Return
EndIf


$CurrNum = 1
$TotalNum = $_FilterCount
$Added   = 0
$Removed = 0

Goto Position=TOP
While Not ($_EOL)

  # If corrected, we try to update
  If $d_HasCorrected
    Gosub name=SendCorrected
    $Added = $Added + 1

  # Not corrected anymore, delete from geocaching.com
  Else
    Gosub name=DeleteCorrected
    $Removed = $Removed + 1
  EndIf

  $statusMessage = "$CurrNum / $TotalNum (Added: $Added / Removed: $Removed)"
  ShowStatus msg=$statusMessage Width=350

  # Update CustomField CurrUpdate
  $dummy = CustomPut("CorrUpdate",DateToSql($_Today))

  $CurrNum = $CurrNum + 1
  Goto Position=Next
EndWhile

MsgOk msg="Finished: $Added added - $Removed removed"

BeginSub name=SendCorrected
$DoLoop = true
$LoopCounter = 1
  While $DoLoop
    $XmlAPI=$APITemplate
    $XmlAPI=Replace("~GCCODE~",    $d_Code,      $XmlAPI)
    $XmlAPI=Replace("~LATITUDE~",  $d_Latitude,  $XmlAPI)
    $XmlAPI=Replace("~LONGITUDE~", $d_Longitude, $XmlAPI)
    $retVal = GcApi("SaveUserWaypoint",$XmlAPI)
    If $_GcApiError
      MsgOk msg="There was an error with the API request (SaveUserWaypoint)"
    EndIf

    $APIres = val(sqlite("sql","select data FROM GCapi where key = '/SaveUserWaypointResponse/Status/StatusCode'"))
	If $APIres = 0
	  # The API is unreliable, so we need to actually check if we have a corrected coord! :/
	  $retVal = GcApi("GetUserWaypoints?&cacheCode=$d_Code")
	  If $_GcApiError
        MsgOk msg="There was an error with the API request (GetUserWaypoints)"
      EndIf
	  $Corrected = val(sqlite("sql","select count(key) FROM GCapi where Key = '/GetUserWaypointsResponse/UserWaypoints/a:UserWaypoint/a:IsCorrectedCoordinate' and Data = 'true'"))
	  If $Corrected > 0
        $DoLoop = false
	  EndIf
    EndIf

    # The number of calls allowed for this Method has been exceeded
    If $APIres = 140
      Gosub name=DelayTimer
	EndIf
	# Already exists, we first need to delete on gc.com, then try again
	If $APIres = 155
      Gosub name=DeleteCorrected
    EndIf

	If $LoopCounter > 5
	  # Bail out
	  MsgOk msg="There was an error with the API request (SaveUserWaypoint) Status is $APIres"
	  $DoLoop = false
	EndIf
  $LoopCounter = $LoopCounter + 1
  EndWhile
EndSub

BeginSub name=DeleteCorrected
  $DoDelLoop = true
$LoopDelCounter = 1
  While $DoDelLoop
    $WayPoints = GcApi("GetUserWaypoints?cacheCode=$d_Code")
    $WpToDelete = val(sqlite("sql","select data FROM GCapi where key = '/GetUserWaypointsResponse/UserWaypoints/a:UserWaypoint/a:ID' "))
    If $WpToDelete > 1
      $retVal = GcApi("DeleteUserWaypoint?waypointId=$WpToDelete")
      If $_GcApiError
        MsgOk msg="There was an error with the API request (DeleteUserWaypoint)"
      EndIf
    EndIf

    # The number of calls allowed for this Method has been exceeded
    $APIresDel = val(sqlite("sql","select data FROM GCapi where key = '/SaveUserWaypointResponse/Status/StatusCode'"))
    If $APIresDel = 140
      Gosub name=DelayTimer
	EndIf
    If $APIresDel = 0
      $DoDelLoop = false
	EndIf

	If $LoopDelCounter > 5
	  # Bail out
	  $DoDelLoop = false
	EndIf
  $LoopDelCounter = $LoopDelCounter + 1
  EndWhile
EndSub

BeginSub name=DelayTimer
	$DelaySeconds = 20
	While $DelaySeconds >= 0
		Delay MS=1000
		ShowStatus Msg="Please wait $DelaySeconds seconds before we continue" Title=API Delay : $DelaySeconds
		$DelaySeconds = $DelaySeconds - 1
	EndWhile
	ShowStatus Display=Off
EndSub

<data> VarName=$APITemplate
<SaveUserWaypointRequest xmlns="http://www.geocaching.com/Geocaching.Live/data">
  <AccessToken>{ACCESSTOKEN}</AccessToken>
  <CacheCode>~GCCODE~</CacheCode>
  <Latitude>~LATITUDE~</Latitude>
  <Longitude>~LONGITUDE~</Longitude>
  <ID>0</ID>
  <IsCorrectedCoordinate>true</IsCorrectedCoordinate>
  <IsUserCompleted>true</IsUserCompleted>
</SaveUserWaypointRequest>
<enddata>
