#*******************************************
# MacVersion = 1.5
# MacDescription = preExport
# MacAuthor = bjoff
# MacFileName = preExport.gsk
# NoVersionCheck
#*******************************************

#
# Denne makroen gjør det mulig å eksportere cacher til GPS med endel flagg foran cachenavn
#
# Tilgjengelige koder er:
#
# ! - Deaktivert cache
# * - Korrigerte koordinater
# D - Denne cachen har DNF som siste logg
# R - Manglende i din DT-matrise
# r - Manglende i din DT-matrise neste runde
# M - Mangler i 'utlagt måned' tabellen ()
# m - Mangler i 'utlagt måned' tabellen ()
# d - Mangler i 'utlagt dato' tabellen
# A - Denne cachen har et attributt du mangler
# p - Denne cachen har parkeringskoordinater / underveipunkt
# F - Denne cachen som har mer enn X poeng
# G - Manglende grad for cache '360 degrees of Norway'
# K - manglende kommune
# L - Lonely cache (ikke funnet på 1 år, og ikke vært disablet i perioden)
# t - manglende DT for cachetypen (se f.eks. GC6XVBX,GC6RRKZ,GC6M79B,GC6M77E,etc)
#
# Et cachenavn kan da f.eks. se ut som dette på GPS'en:
# "[*RMpGK] Fjelltur" som betyr at det her er korrigerte koordinater, du får
#  en ny rating og en ny utlagt måned, samt at det finnes parkeringskoordinater. I tillegg
#  gir denne en ny grad for 360-challengen og er i en kommune du ikke har funn i fra før.
#
#
# For å få med disse flaggene må det også settes at man skal benytte verdier fra User-feltet
# hvor vi nå har samlet flagg. Dette gjøres ved å sette noe tilsvarende linjen under i feltet
# 'Use Custom Cache name' (Verdiene under er det jeg benytter for export)
#
#    %User4%name

# Sett inn de bokstavene som er ønskelig for deg i linjen under
# Dette er selve av/på knappen for de forskjellige bokstavene.

$Flags = "!*DRrMmdApFGKLt"

# Her setter vi hvilket felt som skal benyttes for flaggene som settes.
# Mulige verdier er 'User1', 'User2', 'User3', 'User4'.
$UserField = "User4"

# Matrix number (For flagg 'R' og 'r')
# Hvilken runde av matrisen skal vi sikte etter?
# Om du mangler en cache på å fylle første runde kan du ved å sette denne
# to allerede nå få flagget cacher du trenger til neste runde.
# Standardverdi er 1.
$DtRound = 1

# Standardverdi er 1. (For flagg 'd')
$Jasmer = 1

# Favorittpoeng som skal markeres med 'F'
$Favoritt = 50

#
#
# Ingenting trenger å endres under denne streken.
#############################################################################
#
#

# Blank $UserField før vi fyller opp feltet igjen.
$_sql = "Update Caches set $UserField = ''"
$status = Sqlite("sql",$_sql)

If RegEx ("(?-i)t", $Flags)
  $cacheTypes = "BCEIMRTUVWZ"
  While Len($cacheTypes) > 0
    $type = Left($cacheTypes, 1)
    $cacheTypes = Right($cacheTypes, Len($cacheTypes) -1)

    $query = $SQL_T
    $query = Replace ("~TYPE~", $type, $query, false)
    GoSub Name=DoSQL
  EndWhile
EndIf

If RegEx ("(?-i)L", $Flags)
  # Sett 'L' for cacher som ikke er funnet på over et år
  $query = $SQL_L
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)K", $Flags)
  # Sett 'K' for cacher i nye kommuner
  $query = $SQL_K
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)G", $Flags)
  # Sett 'G' for missing degree for cache 'GC470AG - 360 degrees of Norway - OK#14'
  $query = $SQL_G
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)F", $Flags)
  # Sett 'F' for cacher som har mer enn $Favoritt poeng
  $query = $SQL_F
  $query = Replace ("~Favoritt~", "$Favoritt", $query, false)
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)p", $Flags)
  # Sett 'p' om det finnes Parkeringskoordinater
  $query = $SQL_p
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)A", $Flags)
  # Sett 'A' for cacher som har attributter som mangler.
  $query = $SQL_A
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)d", $Flags)
  # Sett 'd' for cacher som mangler på 'utlagt dato'
  $query = $SQL_d
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)m", $Flags)
  # Sett 'm' for cacher som er lagt ut en måned som mangler (neste runde)
  $query = $SQL_Jasmer
  $query = Replace ("~Letter~", "m", $query, false)
  $query = Replace ("~OPERATOR~", "=", $query, false)
  $query = Replace ("~JASMER~", "$Jasmer", $query, false)
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)M", $Flags)
  # Sett 'M' for cacher som er lagt ut en måned som mangler
  $query = $SQL_Jasmer
  $query = Replace ("~Letter~", "M", $query, false)
  $query = Replace ("~OPERATOR~", "<", $query, false)
  $query = Replace ("~JASMER~", "$Jasmer", $query, false)
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)r", $Flags)
  # Sett 'r' for cacher som mangler i neste runde 81 DT matrise
  $query = $SQL_DT
  $query = Replace ("~Letter~", "r", $query, false)
  $query = Replace ("~OPERATOR~", "=", $query, false)
  $query = Replace ("~DTROUND~", "$DtRound", $query, false)
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)R", $Flags)
  # Sett 'R' for cacher som mangler i 81 DT matrise
  $query = $SQL_DT
  $query = Replace ("~Letter~", "R", $query, false)
  $query = Replace ("~OPERATOR~", "<", $query, false)
  $query = Replace ("~DTROUND~", "$DtRound", $query, false)
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)D", $Flags)
  # Sett 'D' for cacher som har DNF, NM, NA som sistelogg
  $query = $SQL_DNF
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)\*", $Flags)
  # Sett '*' om det er lagt inn 'korrigerte koordinater' for cachen
  $query = $SQL_Corr
  GoSub Name=DoSQL
EndIf

If RegEx ("(?-i)!", $Flags)
  # Sett '!' for deaktiverte cacher.
  $query = $SQL_Disabled
  GoSub Name=DoSQL
EndIf

# Lag en 'ramme' rundt de nye status-flaggene
$_sql = "Update Caches set $UserField = '(' || $UserField || ')' Where $UserField <>''"
$status = Sqlite("sql",$_sql)

# Her starter den egentlige export-makroen.
MACRO File="GarminExport.gsk" VarScope=Local

BeginSub Name=DoSQL
  $filterSQL = "Code In (SELECT Code FROM CachesAll WHERE $_WHERE)"
  $_sql = Replace ("~UserField~", $UserField, $query, false)
  $_sql = Replace ("~WHERE~", $filterSQL, $_sql, false)
  $status = Sqlite("sql",$_sql)
EndSub


###########################
#
# SQL
#   Added here to keep indentations.
#
###########################

<Data> VarName=$SQL_T
Update Caches
Set ~UserField~ = 't' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And CacheType = '~TYPE~'
And Code in (
  Select Code
  From Caches
  Where 100*difficulty+terrain Not In (
    Select Distinct (100*Difficulty+Terrain) as DT
    From Caches
    Where Found
    And CacheType = '~TYPE~'
    Group By DT Having count(DT) > 0
  )
)
<enddata>


<Data> VarName=$SQL_L
Update Caches
Set ~UserField~ = 'L' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And (julianday('now') - julianday(LastFoundDate) > 365 or LastFoundDate = '' and (julianday('now') - julianday(PlacedDate)) > 365)
And code Not in (
  Select lparent
  From Logs
  Where lparent = code
  And ltype = 'Publish Listing'
  And lDate > date(datetime('now', '-1 year'))
)
And code not in (
  Select lparent
  From Logs
  Where lparent = code
  And ltype = 'Enable Listing'
  And lDate > date(datetime('now', '-1 year'))
)
<enddata>


<Data> VarName=$SQL_K
Update Caches
Set ~UserField~ = 'K' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Country || State || County not in (
  Select distinct c2.Country || c2.State || c2.County
  From caches c2
  Where c2.Found
)
<enddata>


<Data> VarName=$SQL_G
Update Caches
Set ~UserField~ = 'G' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Country = 'Norway'
And Code in (
  Select code
  From caches
  Where cast(g_bearing2(61.6364, 8.3127, latOriginal, lonOriginal) as int) not in (
    Select distinct cast(g_bearing2(61.6364, 8.3127, c2.latOriginal, c2.lonOriginal) as int)
    From caches c2
    Where c2.Found
    And c2.Country = 'Norway'
  )
)
<enddata>


<Data> VarName=$SQL_F
Update Caches
Set ~UserField~ = 'F' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And FavPoints >= ~Favoritt~
<enddata>


<Data> VarName=$SQL_p
Update Caches
Set ~UserField~ = 'p' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code in (
  Select c.Code
  From Caches c, Waypoints w
  Where Not c.Found
  And w.cParent = c.Code
  And cType = 'Parking Area'
)
<enddata>


<Data> VarName=$SQL_A
Update Caches
Set ~UserField~ = 'A' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code in (
  Select distinct c.Code
  From Caches c, Attributes a
  Where c.Code = a.aCode
  And 100*a.aId+a.aInc Not in (
    Select Distinct 100*a.aId+a.aInc
    From Attributes a, Caches c
    Where c.Found
    And c.Code = a.aCode
  )
)
<enddata>


<Data> VarName=$SQL_d
Update Caches
Set ~UserField~ = 'd' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And substr(PlacedDate, 6, 5) not in (
  Select distinct substr(PlacedDate, 6, 5)
  From caches where found
)
<enddata>


<Data> VarName=$SQL_Jasmer
Update Caches
Set ~UserField~ = '~Letter~' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code not in (
  Select Code
  From Caches
  Where substr(PlacedDate, 0, 8) not in (
    Select Distinct substr(PlacedDate, 0, 8) as Mnd
    From caches
    Where Found
    Group by Mnd Having count(Mnd) ~OPERATOR~ ~JASMER~
  )
)
<enddata>


<Data> VarName=$SQL_DT
Update Caches
Set ~UserField~ = '~Letter~' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code Not in (
  Select Code
  From Caches
  Where 100*difficulty+terrain not in (
    Select Distinct (100*Difficulty+Terrain) as DT
    From Caches
    Where Found
    Group By DT Having count(DT) ~OPERATOR~ ~DTROUND~
  )
)
<enddata>


<Data> VarName=$SQL_DNF
Update Caches
Set ~UserField~ = 'D' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code in (
  Select code
  From caches
  Where (
    Select sum(NA)
    From (
      Select case 
        when ltype = 'Needs Archived' then 1 
        when ltype = 'Didn''t find it' then 1 
        when ltype = 'Needs Maintenance' then 1 
        else 0 
      end as NA
      From logs
      Where lParent = code order by ldate desc, llogid desc limit 1
    )
  )
  > 0
)
<enddata>


<Data> VarName=$SQL_Corr
Update Caches
Set ~UserField~ = '*' || ~UserField~
Where ~WHERE~
And Not Found
And Status ='A'
And Code in (
  Select c.Code
  From Caches c, Corrected o
  Where Not c.Found
  And o.kCode = c.Code
)
<enddata>


<Data> VarName=$SQL_Disabled
Update Caches
Set ~UserField~ = '!' || ~UserField~
Where ~WHERE~
And Not Found
And TempDisabled
<enddata>
